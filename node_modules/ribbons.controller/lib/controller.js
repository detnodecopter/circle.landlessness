var util = require('util');
var Component = require('ribbons.component');

function Controller (options) {
  Component.call(this, options);
  options = options || {};
  this.name = options.name || 'controller';
}
util.inherits(Controller, Component);

Controller.as = function (child) {
  util.inherits(child, Controller);
}

Controller.prototype.onto = function(sensor,event) {
  var listenerFunctionName = 'on' + capitalize(sensorName.call(this,sensor,event)) + capitalize(event);
  this.info('adding listener ' + listenerFunctionName, 'to sensor: ' + sensor.name, 'event: ' + event);
  sensor.on(event, this[listenerFunctionName].bind(this));
  return this;
};

// TODO: have stop remove the listeners
Controller.prototype.stop  = function() {};

function sensorName(sensor,event) {
  for (property in this.sensors) {
    if (this.sensors[property] === sensor) {
      return property;
    }
  } 
  throw new Error('could not find Sensor for "' + event + '" event in a Controller definition.');
}

function capitalize(string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
}

module.exports = Controller;
